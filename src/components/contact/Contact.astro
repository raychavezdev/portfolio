---
import Github from '../../icons/Github'
import Instagram from '../../icons/Instagram.astro'
import Linkedin from '../../icons/Linkedin.astro'
import Mail from '../../icons/Mail.astro'
import FormItem from '../contact/FormItem.astro'
import SubTitle from '../SubTitle'
import Social from './Social.astro'
---

<section id="contact">
  <SubTitle><Mail /> Contactame</SubTitle>
  <p class="text-sm">
    Gracias por visitar mi portfolio. Si tienes alguna idea, proyecto o
    simplemente quieres saludar, no dudes en contactarme.
  </p>
  <div class="mt-10">
    <form id="form" class="flex flex-col gap-10" autocomplete="off">
      <div class="flex flex-col gap-10 sm:flex-row">
        <FormItem type="text" forHTML="name" text="Nombre" />
        <FormItem type="email" forHTML="email" text="Correo" />
      </div>
      <FormItem forHTML="message" text="Mensaje" />
      <button
        type="submit"
        class="rounded-md bg-blue-500 py-2 text-gray-100 hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700"
        >Enviar</button
      >
    </form>
  </div>
  <div
    id="status-message"
    class="mt-4 hidden rounded-md p-3 text-gray-950 dark:text-gray-200"
  >
  </div>
  <footer class="mt-8 border-t border-t-gray-300 text-gray-300">
    <ul class="flex justify-center gap-6 pt-4 text-gray-900 dark:text-gray-300">
      <Social>
        <a href="https://www.linkedin.com/in/raymundo-chavez/" target="_blank">
          <Linkedin w="35" h="35" />
        </a>
      </Social>
      <Social>
        <a href="https://github.com/raychavezdev" target="_blank">
          <Github w="35" h="35" />
        </a>
      </Social>
      <Social>
        <a href="https://www.instagram.com/raymundo_developer/" target="_blank">
          <Instagram w="35" h="35" />
        </a>
      </Social>
    </ul>
  </footer>
</section>

<script>
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  import emailjs, { EmailJSResponseStatus } from '@emailjs/browser'
  const form = document.getElementById('form')
  const statusMessage = document.getElementById('status-message')
  const colorStatusWaiting =
    'bg-zinc-300 bg-gradient-to-br from-zinc-300 to-zinc-200 shadow-sm shadow-gray-400 dark:bg-zinc-800 dark:bg-gradient-to-br dark:from-zinc-600 dark:to-zinc-900/50 dark:shadow-gray-800'
  const colorStatusOk = 'bg-green-500/40'
  const colorStatusError = 'bg-red-500/40'
  const regexEmail = /^[\w.-]+@[\w-]+\.[\w]{2,4}$/

  // Form event
  form?.addEventListener('submit', async (e) => {
    e.preventDefault()

    // get values
    const name = (document.getElementById('name') as HTMLInputElement).value
    const email = (document.getElementById('email') as HTMLInputElement).value
    const message = (document.getElementById('message') as HTMLInputElement)
      .value

    if (statusMessage) {
      statusMessage.innerHTML = ''
      statusMessage.className =
        'mt-4 hidden rounded-md p-3 text-gray-950 dark:text-gray-200'
    }

    let flagError = false
    let warnings = ''

    if (name.length < 3) {
      flagError = true
      warnings += `Nombre no válido <br>`
    }
    if (!regexEmail.test(email)) {
      flagError = true
      warnings += `Email no válido <br>`
    }
    if (message.length < 4) {
      flagError = true
      warnings += `Mensaje no válido <br>`
    }

    if (flagError) {
      if (statusMessage) {
        statusMessage?.classList.remove('hidden')
        statusMessage?.classList.add(...colorStatusError.split(' '))
        statusMessage.innerHTML = warnings
      }
      return
    }

    // show status waiting
    if (statusMessage) {
      statusMessage?.classList.remove('hidden')
      statusMessage?.classList.add(...colorStatusWaiting.split(' '))
      statusMessage.innerText = 'Enviando tu mensaje, por favor espera...'
    }

    const templateParams = {
      from_name: name,
      from_email: email,
      message,
    }

    // try to send email
    try {
      const res: EmailJSResponseStatus = await emailjs.send(
        'service_q4kpsuo',
        'template_fkgqlar',
        templateParams,
        {
          publicKey: 'yNgHYMaxRhDzmzRZR',
        },
      )

      if (res.status === 200) {
        if (statusMessage) {
          statusMessage?.classList.remove(...colorStatusWaiting.split(' '))
          statusMessage?.classList.add(...colorStatusOk.split(' '))
          statusMessage.innerText = '¡Mensaje enviado exitosamente!'
          setTimeout(() => {
            statusMessage?.classList.add('hidden')
          }, 3000)
        }
      }
    } catch (err) {
      console.error(err)
      if (statusMessage) {
        statusMessage?.classList.remove(...colorStatusWaiting.split(' '))
        statusMessage?.classList.add(...colorStatusError.split(' '))
        statusMessage.innerText = 'Ha ocurrido un problema al enviar tu mensaje'
        setTimeout(() => {
          statusMessage?.classList.add('hidden')
        }, 3000)
      }
    }
  })
</script>
